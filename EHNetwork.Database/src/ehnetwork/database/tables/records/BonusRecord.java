/**
 * This class is generated by jOOQ
 */
package ehnetwork.database.tables.records;

import ehnetwork.database.tables.Bonus;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BonusRecord extends org.jooq.impl.UpdatableRecordImpl<BonusRecord> implements java.io.Serializable, java.lang.Cloneable, org.jooq.Record3<java.lang.Integer, java.sql.Timestamp, java.sql.Date> {

	private static final long serialVersionUID = -64019858;

	/**
	 * Setter for <code>Account.bonus.accountId</code>.
	 */
	public void setAccountId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Account.bonus.accountId</code>.
	 */
	public java.lang.Integer getAccountId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Account.bonus.dailytime</code>.
	 */
	public void setDailytime(java.sql.Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Account.bonus.dailytime</code>.
	 */
	public java.sql.Timestamp getDailytime() {
		return (java.sql.Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>Account.bonus.ranktime</code>.
	 */
	public void setRanktime(java.sql.Date value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Account.bonus.ranktime</code>.
	 */
	public java.sql.Date getRanktime() {
		return (java.sql.Date) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.sql.Timestamp, java.sql.Date> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.sql.Timestamp, java.sql.Date> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return Bonus.bonus.accountId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field2() {
		return Bonus.bonus.dailytime;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Date> field3() {
		return Bonus.bonus.ranktime;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getAccountId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value2() {
		return getDailytime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Date value3() {
		return getRanktime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BonusRecord value1(java.lang.Integer value) {
		setAccountId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BonusRecord value2(java.sql.Timestamp value) {
		setDailytime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BonusRecord value3(java.sql.Date value) {
		setRanktime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BonusRecord values(java.lang.Integer value1, java.sql.Timestamp value2, java.sql.Date value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BonusRecord
	 */
	public BonusRecord() {
		super(Bonus.bonus);
	}

	/**
	 * Create a detached, initialised BonusRecord
	 */
	public BonusRecord(java.lang.Integer accountId, java.sql.Timestamp dailytime, java.sql.Date ranktime) {
		super(Bonus.bonus);

		setValue(0, accountId);
		setValue(1, dailytime);
		setValue(2, ranktime);
	}
}
