/**
 * This class is generated by jOOQ
 */
package ehnetwork.database.tables;

import ehnetwork.database.Account;
import ehnetwork.database.Keys;
import ehnetwork.database.tables.records.AccountFriendRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountFriend extends org.jooq.impl.TableImpl<AccountFriendRecord> implements java.io.Serializable, java.lang.Cloneable {

	private static final long serialVersionUID = -1948342395;

	/**
	 * The reference instance of <code>Account.accountFriend</code>
	 */
	public static final AccountFriend accountFriend = new AccountFriend();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<AccountFriendRecord> getRecordType() {
		return AccountFriendRecord.class;
	}

	/**
	 * The column <code>Account.accountFriend.id</code>.
	 */
	public final org.jooq.TableField<AccountFriendRecord, java.lang.Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>Account.accountFriend.uuidSource</code>.
	 */
	public final org.jooq.TableField<AccountFriendRecord, java.lang.String> uuidSource = createField("uuidSource", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>Account.accountFriend.uuidTarget</code>.
	 */
	public final org.jooq.TableField<AccountFriendRecord, java.lang.String> uuidTarget = createField("uuidTarget", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>Account.accountFriend.status</code>.
	 */
	public final org.jooq.TableField<AccountFriendRecord, java.lang.String> status = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>Account.accountFriend.created</code>.
	 */
	public final org.jooq.TableField<AccountFriendRecord, java.sql.Timestamp> created = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>Account.accountFriend.sourceId</code>.
	 */
	public final org.jooq.TableField<AccountFriendRecord, java.lang.Integer> sourceId = createField("sourceId", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>Account.accountFriend.targetId</code>.
	 */
	public final org.jooq.TableField<AccountFriendRecord, java.lang.Integer> targetId = createField("targetId", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>Account.accountFriend</code> table reference
	 */
	public AccountFriend() {
		this("accountFriend", null);
	}

	/**
	 * Create an aliased <code>Account.accountFriend</code> table reference
	 */
	public AccountFriend(java.lang.String alias) {
		this(alias, AccountFriend.accountFriend);
	}

	private AccountFriend(java.lang.String alias, org.jooq.Table<AccountFriendRecord> aliased) {
		this(alias, aliased, null);
	}

	private AccountFriend(java.lang.String alias, org.jooq.Table<AccountFriendRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Account.Account, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<AccountFriendRecord, java.lang.Integer> getIdentity() {
		return Keys.IDENTITY_accountFriend;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<AccountFriendRecord> getPrimaryKey() {
		return Keys.KEY_accountFriend_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<AccountFriendRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<AccountFriendRecord>>asList(Keys.KEY_accountFriend_PRIMARY, Keys.KEY_accountFriend_uuidIndex);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountFriend as(java.lang.String alias) {
		return new AccountFriend(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AccountFriend rename(java.lang.String name) {
		return new AccountFriend(name, null);
	}
}
