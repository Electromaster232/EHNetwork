/**
 * This class is generated by jOOQ
 */
package ehnetwork.database.tables;

import ehnetwork.database.Account;
import ehnetwork.database.Keys;
import ehnetwork.database.tables.records.StatTypesRecord;

/**
 * Stores a reference of the various types of statistics and their associated 
 * stat type IDs.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatTypes extends org.jooq.impl.TableImpl<StatTypesRecord> implements java.io.Serializable, java.lang.Cloneable {

	private static final long serialVersionUID = -371894741;

	/**
	 * The reference instance of <code>Account.statTypes</code>
	 */
	public static final StatTypes statTypes = new StatTypes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<StatTypesRecord> getRecordType() {
		return StatTypesRecord.class;
	}

	/**
	 * The column <code>Account.statTypes.id</code>.
	 */
	public final org.jooq.TableField<StatTypesRecord, org.jooq.types.UByte> id = createField("id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>Account.statTypes.name</code>.
	 */
	public final org.jooq.TableField<StatTypesRecord, java.lang.String> name = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * Create a <code>Account.statTypes</code> table reference
	 */
	public StatTypes() {
		this("statTypes", null);
	}

	/**
	 * Create an aliased <code>Account.statTypes</code> table reference
	 */
	public StatTypes(java.lang.String alias) {
		this(alias, StatTypes.statTypes);
	}

	private StatTypes(java.lang.String alias, org.jooq.Table<StatTypesRecord> aliased) {
		this(alias, aliased, null);
	}

	private StatTypes(java.lang.String alias, org.jooq.Table<StatTypesRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Account.Account, aliased, parameters, "Stores a reference of the various types of statistics and their associated stat type IDs.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<StatTypesRecord> getPrimaryKey() {
		return Keys.KEY_statTypes_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<StatTypesRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<StatTypesRecord>>asList(Keys.KEY_statTypes_PRIMARY, Keys.KEY_statTypes_name);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StatTypes as(java.lang.String alias) {
		return new StatTypes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public StatTypes rename(java.lang.String name) {
		return new StatTypes(name, null);
	}
}
