/**
 * This class is generated by jOOQ
 */
package ehnetwork.database.tables;

import ehnetwork.database.Account;
import ehnetwork.database.Keys;
import ehnetwork.database.tables.records.AccountPreferencesRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountPreferences extends org.jooq.impl.TableImpl<AccountPreferencesRecord> implements java.io.Serializable, java.lang.Cloneable {

	private static final long serialVersionUID = -38086905;

	/**
	 * The reference instance of <code>Account.accountPreferences</code>
	 */
	public static final AccountPreferences accountPreferences = new AccountPreferences();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<AccountPreferencesRecord> getRecordType() {
		return AccountPreferencesRecord.class;
	}

	/**
	 * The column <code>Account.accountPreferences.id</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>Account.accountPreferences.uuid</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.String> uuid = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>Account.accountPreferences.filterChat</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> filterChat = createField("filterChat", org.jooq.impl.SQLDataType.TINYINT, this, "");

	/**
	 * The column <code>Account.accountPreferences.invisibility</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> invisibility = createField("invisibility", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.games</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> games = createField("games", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.visibility</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> visibility = createField("visibility", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.friendChat</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> friendChat = createField("friendChat", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.privateMessaging</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> privateMessaging = createField("privateMessaging", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.showChat</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> showChat = createField("showChat", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.partyRequests</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> partyRequests = createField("partyRequests", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.forcefield</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> forcefield = createField("forcefield", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.showMacReports</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> showMacReports = createField("showMacReports", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.ignoreVelocity</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> ignoreVelocity = createField("ignoreVelocity", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.pendingFriendRequests</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> pendingFriendRequests = createField("pendingFriendRequests", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.friendDisplayInventoryUI</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> friendDisplayInventoryUI = createField("friendDisplayInventoryUI", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.friendDisplayOnlineStatus</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> friendDisplayOnlineStatus = createField("friendDisplayOnlineStatus", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.friendDisplayServerName</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> friendDisplayServerName = createField("friendDisplayServerName", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.friendAllowRequests</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> friendAllowRequests = createField("friendAllowRequests", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.friendAllowMessaging</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.Byte> friendAllowMessaging = createField("friendAllowMessaging", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>Account.accountPreferences.language</code>.
	 */
	public final org.jooq.TableField<AccountPreferencesRecord, java.lang.String> language = createField("language", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * Create a <code>Account.accountPreferences</code> table reference
	 */
	public AccountPreferences() {
		this("accountPreferences", null);
	}

	/**
	 * Create an aliased <code>Account.accountPreferences</code> table reference
	 */
	public AccountPreferences(java.lang.String alias) {
		this(alias, AccountPreferences.accountPreferences);
	}

	private AccountPreferences(java.lang.String alias, org.jooq.Table<AccountPreferencesRecord> aliased) {
		this(alias, aliased, null);
	}

	private AccountPreferences(java.lang.String alias, org.jooq.Table<AccountPreferencesRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Account.Account, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<AccountPreferencesRecord, java.lang.Integer> getIdentity() {
		return Keys.IDENTITY_accountPreferences;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<AccountPreferencesRecord> getPrimaryKey() {
		return Keys.KEY_accountPreferences_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<AccountPreferencesRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<AccountPreferencesRecord>>asList(Keys.KEY_accountPreferences_PRIMARY, Keys.KEY_accountPreferences_uuid_index);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccountPreferences as(java.lang.String alias) {
		return new AccountPreferences(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AccountPreferences rename(java.lang.String name) {
		return new AccountPreferences(name, null);
	}
}
