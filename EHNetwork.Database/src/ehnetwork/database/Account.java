/**
 * This class is generated by jOOQ
 */
package ehnetwork.database;

import ehnetwork.database.tables.*;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Account extends org.jooq.impl.SchemaImpl implements java.io.Serializable, java.lang.Cloneable {

	private static final long serialVersionUID = 625106486;

	/**
	 * The reference instance of <code>Account</code>
	 */
	public static final Account Account = new Account();

	/**
	 * No further instances allowed
	 */
	private Account() {
		super("Account");
	}

	@Override
	public final java.util.List<org.jooq.Table<?>> getTables() {
		java.util.List result = new java.util.ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final java.util.List<org.jooq.Table<?>> getTables0() {
		return java.util.Arrays.<org.jooq.Table<?>>asList(
			AccountClan.accountClan,
			AccountCoinTransactions.accountCoinTransactions,
			AccountFriend.accountFriend,
			AccountGemTransactions.accountGemTransactions,
			AccountIgnore.accountIgnore,
			AccountInventory.accountInventory,
			AccountPolls.accountPolls,
			AccountPreferences.accountPreferences,
			Accounts.accounts,
			AccountStat.accountStat,
			AccountStats.accountStats,
			AccountTasks.accountTasks,
			AccountTransactions.accountTransactions,
			ActiveTournaments.activeTournaments,
			Bonus.bonus,
			ClanAlliances.clanAlliances,
			ClanEnemies.clanEnemies,
			ClanMember.clanMember,
			Clans.clans,
			ClanServer.clanServer,
			ClanShopItem.clanShopItem,
			ClanTerritory.clanTerritory,
			EloRating.eloRating,
			FieldBlock.fieldBlock,
			FieldMonster.fieldMonster,
			FieldOre.fieldOre,
			ItemCategories.itemCategories,
			Items.items,
			Mail.mail,
			Mailbox.mailbox,
			Npcs.npcs,
			PlayerMap.playerMap,
			Polls.polls,
			RankBenefits.rankBenefits,
			ServerPassword.serverPassword,
			Spawns.spawns,
			StatEvents.statEvents,
			Stats.stats,
			StatTypes.statTypes,
			Tasks.tasks,
			TournamentLB.TournamentLB,
			Transactions.transactions);
	}
}
