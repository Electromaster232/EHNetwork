/**
 * This class is generated by jOOQ
 */
package mineplex.database.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FieldMonster extends org.jooq.impl.TableImpl<mineplex.database.tables.records.FieldMonsterRecord> implements java.io.Serializable, java.lang.Cloneable {

	private static final long serialVersionUID = 1961856051;

	/**
	 * The reference instance of <code>Account.fieldMonster</code>
	 */
	public static final mineplex.database.tables.FieldMonster fieldMonster = new mineplex.database.tables.FieldMonster();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<mineplex.database.tables.records.FieldMonsterRecord> getRecordType() {
		return mineplex.database.tables.records.FieldMonsterRecord.class;
	}

	/**
	 * The column <code>Account.fieldMonster.id</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>Account.fieldMonster.server</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.String> server = createField("server", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>Account.fieldMonster.name</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.String> name = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>Account.fieldMonster.type</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.String> type = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>Account.fieldMonster.mobMax</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.Integer> mobMax = createField("mobMax", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>Account.fieldMonster.mobRate</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.Double> mobRate = createField("mobRate", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>Account.fieldMonster.center</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.String> center = createField("center", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>Account.fieldMonster.radius</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.Integer> radius = createField("radius", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>Account.fieldMonster.height</code>.
	 */
	public final org.jooq.TableField<mineplex.database.tables.records.FieldMonsterRecord, java.lang.Integer> height = createField("height", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>Account.fieldMonster</code> table reference
	 */
	public FieldMonster() {
		this("fieldMonster", null);
	}

	/**
	 * Create an aliased <code>Account.fieldMonster</code> table reference
	 */
	public FieldMonster(java.lang.String alias) {
		this(alias, mineplex.database.tables.FieldMonster.fieldMonster);
	}

	private FieldMonster(java.lang.String alias, org.jooq.Table<mineplex.database.tables.records.FieldMonsterRecord> aliased) {
		this(alias, aliased, null);
	}

	private FieldMonster(java.lang.String alias, org.jooq.Table<mineplex.database.tables.records.FieldMonsterRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, mineplex.database.Account.Account, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<mineplex.database.tables.records.FieldMonsterRecord, java.lang.Integer> getIdentity() {
		return mineplex.database.Keys.IDENTITY_fieldMonster;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<mineplex.database.tables.records.FieldMonsterRecord> getPrimaryKey() {
		return mineplex.database.Keys.KEY_fieldMonster_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<mineplex.database.tables.records.FieldMonsterRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<mineplex.database.tables.records.FieldMonsterRecord>>asList(mineplex.database.Keys.KEY_fieldMonster_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public mineplex.database.tables.FieldMonster as(java.lang.String alias) {
		return new mineplex.database.tables.FieldMonster(alias, this);
	}

	/**
	 * Rename this table
	 */
	public mineplex.database.tables.FieldMonster rename(java.lang.String name) {
		return new mineplex.database.tables.FieldMonster(name, null);
	}
}
