/**
 * This class is generated by jOOQ
 */
package mineplex.database.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerMapRecord extends org.jooq.impl.UpdatableRecordImpl<mineplex.database.tables.records.PlayerMapRecord> implements java.io.Serializable, java.lang.Cloneable, org.jooq.Record4<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Byte> {

	private static final long serialVersionUID = -812772950;

	/**
	 * Setter for <code>Account.playerMap.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Account.playerMap.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Account.playerMap.playerName</code>.
	 */
	public void setPlayerName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Account.playerMap.playerName</code>.
	 */
	public java.lang.String getPlayerName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>Account.playerMap.serverName</code>.
	 */
	public void setServerName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Account.playerMap.serverName</code>.
	 */
	public java.lang.String getServerName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>Account.playerMap.us</code>.
	 */
	public void setUs(java.lang.Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Account.playerMap.us</code>.
	 */
	public java.lang.Byte getUs() {
		return (java.lang.Byte) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Byte> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Byte> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return mineplex.database.tables.PlayerMap.playerMap.id;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return mineplex.database.tables.PlayerMap.playerMap.playerName;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return mineplex.database.tables.PlayerMap.playerMap.serverName;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field4() {
		return mineplex.database.tables.PlayerMap.playerMap.us;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getPlayerName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getServerName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value4() {
		return getUs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerMapRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerMapRecord value2(java.lang.String value) {
		setPlayerName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerMapRecord value3(java.lang.String value) {
		setServerName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerMapRecord value4(java.lang.Byte value) {
		setUs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerMapRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.Byte value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PlayerMapRecord
	 */
	public PlayerMapRecord() {
		super(mineplex.database.tables.PlayerMap.playerMap);
	}

	/**
	 * Create a detached, initialised PlayerMapRecord
	 */
	public PlayerMapRecord(java.lang.Integer id, java.lang.String playerName, java.lang.String serverName, java.lang.Byte us) {
		super(mineplex.database.tables.PlayerMap.playerMap);

		setValue(0, id);
		setValue(1, playerName);
		setValue(2, serverName);
		setValue(3, us);
	}
}
